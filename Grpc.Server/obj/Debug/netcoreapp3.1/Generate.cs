// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/generate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grpc.Server {

  /// <summary>Holder for reflection information generated from Protos/generate.proto</summary>
  public static partial class GenerateReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/generate.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GenerateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVQcm90b3MvZ2VuZXJhdGUucHJvdG8SCGdlbmVyYXRlIoUBCg9HZW5lcmF0",
            "ZVJlcXVlc3QSFgoOcGFzc3dvcmRMZW5ndGgYASABKA0SIAoGY2FzaW5nGAIg",
            "ASgOMhAuZ2VuZXJhdGUuQ2FzaW5nEhMKC3VzZVNwZWNpYWxzGAMgASgIEhMK",
            "C3VzZU51bWVyaWNzGAQgASgIEg4KBmZpbHRlchgFIAEoCSIqCg1HZW5lcmF0",
            "ZVJlcGx5EhkKEWdlbmVyYXRlZFBhc3N3b3JkGAEgASgJKjEKBkNhc2luZxIJ",
            "CgVNSVhFRBAAEg0KCVVQUEVSQ0FTRRABEg0KCUxPV0VSQ0FTRRACMksKCUdl",
            "bmVyYXRvchI+CghHZW5lcmF0ZRIZLmdlbmVyYXRlLkdlbmVyYXRlUmVxdWVz",
            "dBoXLmdlbmVyYXRlLkdlbmVyYXRlUmVwbHlCDqoCC0dycGMuU2VydmVyYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Grpc.Server.Casing), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Server.GenerateRequest), global::Grpc.Server.GenerateRequest.Parser, new[]{ "PasswordLength", "Casing", "UseSpecials", "UseNumerics", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Server.GenerateReply), global::Grpc.Server.GenerateReply.Parser, new[]{ "GeneratedPassword" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Casing {
    [pbr::OriginalName("MIXED")] Mixed = 0,
    [pbr::OriginalName("UPPERCASE")] Uppercase = 1,
    [pbr::OriginalName("LOWERCASE")] Lowercase = 2,
  }

  #endregion

  #region Messages
  public sealed partial class GenerateRequest : pb::IMessage<GenerateRequest> {
    private static readonly pb::MessageParser<GenerateRequest> _parser = new pb::MessageParser<GenerateRequest>(() => new GenerateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Server.GenerateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateRequest(GenerateRequest other) : this() {
      passwordLength_ = other.passwordLength_;
      casing_ = other.casing_;
      useSpecials_ = other.useSpecials_;
      useNumerics_ = other.useNumerics_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateRequest Clone() {
      return new GenerateRequest(this);
    }

    /// <summary>Field number for the "passwordLength" field.</summary>
    public const int PasswordLengthFieldNumber = 1;
    private uint passwordLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PasswordLength {
      get { return passwordLength_; }
      set {
        passwordLength_ = value;
      }
    }

    /// <summary>Field number for the "casing" field.</summary>
    public const int CasingFieldNumber = 2;
    private global::Grpc.Server.Casing casing_ = global::Grpc.Server.Casing.Mixed;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Server.Casing Casing {
      get { return casing_; }
      set {
        casing_ = value;
      }
    }

    /// <summary>Field number for the "useSpecials" field.</summary>
    public const int UseSpecialsFieldNumber = 3;
    private bool useSpecials_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseSpecials {
      get { return useSpecials_; }
      set {
        useSpecials_ = value;
      }
    }

    /// <summary>Field number for the "useNumerics" field.</summary>
    public const int UseNumericsFieldNumber = 4;
    private bool useNumerics_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseNumerics {
      get { return useNumerics_; }
      set {
        useNumerics_ = value;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 5;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PasswordLength != other.PasswordLength) return false;
      if (Casing != other.Casing) return false;
      if (UseSpecials != other.UseSpecials) return false;
      if (UseNumerics != other.UseNumerics) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PasswordLength != 0) hash ^= PasswordLength.GetHashCode();
      if (Casing != global::Grpc.Server.Casing.Mixed) hash ^= Casing.GetHashCode();
      if (UseSpecials != false) hash ^= UseSpecials.GetHashCode();
      if (UseNumerics != false) hash ^= UseNumerics.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PasswordLength != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PasswordLength);
      }
      if (Casing != global::Grpc.Server.Casing.Mixed) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Casing);
      }
      if (UseSpecials != false) {
        output.WriteRawTag(24);
        output.WriteBool(UseSpecials);
      }
      if (UseNumerics != false) {
        output.WriteRawTag(32);
        output.WriteBool(UseNumerics);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PasswordLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PasswordLength);
      }
      if (Casing != global::Grpc.Server.Casing.Mixed) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Casing);
      }
      if (UseSpecials != false) {
        size += 1 + 1;
      }
      if (UseNumerics != false) {
        size += 1 + 1;
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateRequest other) {
      if (other == null) {
        return;
      }
      if (other.PasswordLength != 0) {
        PasswordLength = other.PasswordLength;
      }
      if (other.Casing != global::Grpc.Server.Casing.Mixed) {
        Casing = other.Casing;
      }
      if (other.UseSpecials != false) {
        UseSpecials = other.UseSpecials;
      }
      if (other.UseNumerics != false) {
        UseNumerics = other.UseNumerics;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PasswordLength = input.ReadUInt32();
            break;
          }
          case 16: {
            Casing = (global::Grpc.Server.Casing) input.ReadEnum();
            break;
          }
          case 24: {
            UseSpecials = input.ReadBool();
            break;
          }
          case 32: {
            UseNumerics = input.ReadBool();
            break;
          }
          case 42: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GenerateReply : pb::IMessage<GenerateReply> {
    private static readonly pb::MessageParser<GenerateReply> _parser = new pb::MessageParser<GenerateReply>(() => new GenerateReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Server.GenerateReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReply(GenerateReply other) : this() {
      generatedPassword_ = other.generatedPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReply Clone() {
      return new GenerateReply(this);
    }

    /// <summary>Field number for the "generatedPassword" field.</summary>
    public const int GeneratedPasswordFieldNumber = 1;
    private string generatedPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GeneratedPassword {
      get { return generatedPassword_; }
      set {
        generatedPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GeneratedPassword != other.GeneratedPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GeneratedPassword.Length != 0) hash ^= GeneratedPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GeneratedPassword.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GeneratedPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GeneratedPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GeneratedPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateReply other) {
      if (other == null) {
        return;
      }
      if (other.GeneratedPassword.Length != 0) {
        GeneratedPassword = other.GeneratedPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GeneratedPassword = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
